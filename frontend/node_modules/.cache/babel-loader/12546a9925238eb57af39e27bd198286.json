{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\kamatechP\\\\memories\\\\frontend2\\\\src\\\\components\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Calendar } from 'primereact/calendar';\nimport { Password } from 'primereact/password';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Dialog } from 'primereact/dialog';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { CountryService } from '../service/CountryService';\nimport './FormDemo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [showMessage, setShowMessage] = useState(false);\n  const [formData, setFormData] = useState({});\n  const countryservice = new CountryService();\n  useEffect(() => {\n    countryservice.getCountries().then(data => setCountries(data));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      date: null,\n      country: null,\n      accept: false\n    },\n    validate: data => {\n      let errors = {};\n\n      if (!data.name) {\n        errors.name = 'Name is required.';\n      }\n\n      if (!data.email) {\n        errors.email = 'Email is required.';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\n        errors.email = 'Invalid email address. E.g. example@email.com';\n      }\n\n      if (!data.password) {\n        errors.password = 'Password is required.';\n      }\n\n      if (!data.accept) {\n        errors.accept = 'You need to agree to the terms and conditions.';\n      }\n\n      return errors;\n    },\n    onSubmit: data => {\n      setFormData(data);\n      setShowMessage(true);\n      formik.resetForm();\n    }\n  });\n\n  const isFormFieldValid = name => !!(formik.touched[name] && formik.errors[name]);\n\n  const getFormErrorMessage = name => {\n    return isFormFieldValid(name) && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"p-error\",\n      children: formik.errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 42\n    }, this);\n  };\n\n  const dialogFooter = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-d-flex p-jc-center\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      label: \"OK\",\n      className: \"p-button-text\",\n      autoFocus: true,\n      onClick: () => setShowMessage(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 64\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 26\n  }, this);\n\n  const passwordHeader = /*#__PURE__*/_jsxDEV(\"h6\", {\n    children: \"Pick a password\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 28\n  }, this);\n\n  const passwordFooter = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"p-mt-2\",\n      children: \"Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"p-pl-2 p-ml-2 p-mt-0\",\n      style: {\n        lineHeight: '1.5'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"At least one lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"At least one uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"At least one numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Minimum 8 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-demo\",\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      visible: showMessage,\n      onHide: () => setShowMessage(false),\n      position: \"top\",\n      footer: dialogFooter,\n      showHeader: false,\n      breakpoints: {\n        '960px': '80vw'\n      },\n      style: {\n        width: '30vw'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-d-flex p-ai-center p-dir-col p-pt-6 p-px-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"pi pi-check-circle\",\n          style: {\n            fontSize: '5rem',\n            color: 'var(--green-500)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Registration Successful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            lineHeight: 1.5,\n            textIndent: '1rem'\n          },\n          children: [\"Your account is registered under name \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: formData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 63\n          }, this), \" ; it'll be valid next 30 days without activation. Please check \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: formData.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 149\n          }, this), \" for activation instructions.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-d-flex p-jc-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"p-text-center\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          className: \"p-fluid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-float-label\",\n              children: [/*#__PURE__*/_jsxDEV(InputText, {\n                id: \"name\",\n                name: \"name\",\n                value: formik.values.name,\n                onChange: formik.handleChange,\n                autoFocus: true,\n                className: classNames({\n                  'p-invalid': isFormFieldValid('name')\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                className: classNames({\n                  'p-error': isFormFieldValid('name')\n                }),\n                children: \"Name*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), getFormErrorMessage('name')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-float-label p-input-icon-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"pi pi-envelope\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputText, {\n                id: \"email\",\n                name: \"email\",\n                value: formik.values.email,\n                onChange: formik.handleChange,\n                className: classNames({\n                  'p-invalid': isFormFieldValid('email')\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: classNames({\n                  'p-error': isFormFieldValid('email')\n                }),\n                children: \"Email*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), getFormErrorMessage('email')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-float-label\",\n              children: [/*#__PURE__*/_jsxDEV(Password, {\n                id: \"password\",\n                name: \"password\",\n                value: formik.values.password,\n                onChange: formik.handleChange,\n                toggleMask: true,\n                className: classNames({\n                  'p-invalid': isFormFieldValid('password')\n                }),\n                header: passwordHeader,\n                footer: passwordFooter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: classNames({\n                  'p-error': isFormFieldValid('password')\n                }),\n                children: \"Password*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), getFormErrorMessage('password')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-float-label\",\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                id: \"date\",\n                name: \"date\",\n                value: formik.values.date,\n                onChange: formik.handleChange,\n                dateFormat: \"dd/mm/yy\",\n                mask: \"99/99/9999\",\n                showIcon: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"date\",\n                children: \"Birthday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-float-label\",\n              children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n                id: \"country\",\n                name: \"country\",\n                value: formik.values.country,\n                onChange: formik.handleChange,\n                options: countries,\n                optionLabel: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"country\",\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              inputId: \"accept\",\n              name: \"accept\",\n              checked: formik.values.accept,\n              onChange: formik.handleChange,\n              className: classNames({\n                'p-invalid': isFormFieldValid('accept')\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"accept\",\n              className: classNames({\n                'p-error': isFormFieldValid('accept')\n              }),\n              children: \"I agree to the terms and conditions*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            label: \"Submit\",\n            className: \"p-mt-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"Sn76GcEOQew6MjV8ezrGATVsC9o=\", false, function () {\n  return [useFormik];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/projects/kamatechP/memories/frontend2/src/components/login.js"],"names":["React","useEffect","useState","useFormik","InputText","Button","Dropdown","Calendar","Password","Checkbox","Dialog","Divider","classNames","CountryService","Login","countries","setCountries","showMessage","setShowMessage","formData","setFormData","countryservice","getCountries","then","data","formik","initialValues","name","email","password","date","country","accept","validate","errors","test","onSubmit","resetForm","isFormFieldValid","touched","getFormErrorMessage","dialogFooter","passwordHeader","passwordFooter","lineHeight","width","fontSize","color","textIndent","handleSubmit","values","handleChange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { Password } from 'primereact/password';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Divider } from 'primereact/divider';\r\nimport { classNames } from 'primereact/utils';\r\nimport { CountryService } from '../service/CountryService';\r\nimport './FormDemo.css';\r\n\r\nexport const Login = () => {\r\n    const [countries, setCountries] = useState([]);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [formData, setFormData] = useState({});\r\n    const countryservice = new CountryService();\r\n\r\n    useEffect(() => {\r\n        countryservice.getCountries().then(data => setCountries(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            date: null,\r\n            country: null,\r\n            accept: false\r\n        },\r\n        validate: (data) => {\r\n            let errors = {};\r\n\r\n            if (!data.name) {\r\n                errors.name = 'Name is required.';\r\n            }\r\n\r\n            if (!data.email) {\r\n                errors.email = 'Email is required.';\r\n            }\r\n            else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n                errors.email = 'Invalid email address. E.g. example@email.com';\r\n            }\r\n\r\n            if (!data.password) {\r\n                errors.password = 'Password is required.';\r\n            }\r\n\r\n            if (!data.accept) {\r\n                errors.accept = 'You need to agree to the terms and conditions.';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: (data) => {\r\n            setFormData(data);\r\n            setShowMessage(true);\r\n\r\n            formik.resetForm();\r\n        }\r\n    });\r\n\r\n    const isFormFieldValid = (name) => !!(formik.touched[name] && formik.errors[name]);\r\n    const getFormErrorMessage = (name) => {\r\n        return isFormFieldValid(name) && <small className=\"p-error\">{formik.errors[name]}</small>;\r\n    };\r\n\r\n    const dialogFooter = <div className=\"p-d-flex p-jc-center\"><Button label=\"OK\" className=\"p-button-text\" autoFocus onClick={() => setShowMessage(false)} /></div>;\r\n    const passwordHeader = <h6>Pick a password</h6>;\r\n    const passwordFooter = (\r\n        <React.Fragment>\r\n            <Divider />\r\n            <p className=\"p-mt-2\">Suggestions</p>\r\n            <ul className=\"p-pl-2 p-ml-2 p-mt-0\" style={{ lineHeight: '1.5' }}>\r\n                <li>At least one lowercase</li>\r\n                <li>At least one uppercase</li>\r\n                <li>At least one numeric</li>\r\n                <li>Minimum 8 characters</li>\r\n            </ul>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className=\"form-demo\">\r\n            <Dialog visible={showMessage} onHide={() => setShowMessage(false)} position=\"top\" footer={dialogFooter} showHeader={false} breakpoints={{ '960px': '80vw' }} style={{ width: '30vw' }}>\r\n                <div className=\"p-d-flex p-ai-center p-dir-col p-pt-6 p-px-3\">\r\n                    <i className=\"pi pi-check-circle\" style={{ fontSize: '5rem', color: 'var(--green-500)' }}></i>\r\n                    <h5>Registration Successful!</h5>\r\n                    <p style={{ lineHeight: 1.5, textIndent: '1rem' }}>\r\n                        Your account is registered under name <b>{formData.name}</b> ; it'll be valid next 30 days without activation. Please check <b>{formData.email}</b> for activation instructions.\r\n                    </p>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <div className=\"p-d-flex p-jc-center\">\r\n                <div className=\"card\">\r\n                    <h5 className=\"p-text-center\">Register</h5>\r\n                    <form onSubmit={formik.handleSubmit} className=\"p-fluid\">\r\n                        <div className=\"p-field\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText id=\"name\" name=\"name\" value={formik.values.name} onChange={formik.handleChange} autoFocus className={classNames({ 'p-invalid': isFormFieldValid('name') })} />\r\n                                <label htmlFor=\"name\" className={classNames({ 'p-error': isFormFieldValid('name') })}>Name*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('name')}\r\n                        </div>\r\n                        <div className=\"p-field\">\r\n                            <span className=\"p-float-label p-input-icon-right\">\r\n                                <i className=\"pi pi-envelope\" />\r\n                                <InputText id=\"email\" name=\"email\" value={formik.values.email} onChange={formik.handleChange} className={classNames({ 'p-invalid': isFormFieldValid('email') })} />\r\n                                <label htmlFor=\"email\" className={classNames({ 'p-error': isFormFieldValid('email') })}>Email*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('email')}\r\n                        </div>\r\n                        <div className=\"p-field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Password id=\"password\" name=\"password\" value={formik.values.password} onChange={formik.handleChange} toggleMask\r\n                                    className={classNames({ 'p-invalid': isFormFieldValid('password') })} header={passwordHeader} footer={passwordFooter} />\r\n                                <label htmlFor=\"password\" className={classNames({ 'p-error': isFormFieldValid('password') })}>Password*</label>\r\n                            </span>\r\n                            {getFormErrorMessage('password')}\r\n                        </div>\r\n                        <div className=\"p-field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Calendar id=\"date\" name=\"date\" value={formik.values.date} onChange={formik.handleChange} dateFormat=\"dd/mm/yy\" mask=\"99/99/9999\" showIcon />\r\n                                <label htmlFor=\"date\">Birthday</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field\">\r\n                            <span className=\"p-float-label\">\r\n                                <Dropdown id=\"country\" name=\"country\" value={formik.values.country} onChange={formik.handleChange} options={countries} optionLabel=\"name\" />\r\n                                <label htmlFor=\"country\">Country</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"accept\" name=\"accept\" checked={formik.values.accept} onChange={formik.handleChange} className={classNames({ 'p-invalid': isFormFieldValid('accept') })} />\r\n                            <label htmlFor=\"accept\" className={classNames({ 'p-error': isFormFieldValid('accept') })}>I agree to the terms and conditions*</label>\r\n                        </div>\r\n\r\n                        <Button type=\"submit\" label=\"Submit\" className=\"p-mt-2\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n "]},"metadata":{},"sourceType":"module"}